{"version":3,"file":"512.mjs","sources":["webpack://example-esm/./node_modules/@apollo/server/dist/esm/plugin/inlineTrace/index.js"],"sourcesContent":["import { Trace } from '@apollo/usage-reporting-protobuf';\nimport { TraceTreeBuilder } from '../traceTreeBuilder.js';\nimport { internalPlugin } from '../../internalPlugin.js';\nimport { schemaIsSubgraph } from '../schemaIsSubgraph.js';\nexport function ApolloServerPluginInlineTrace(options = Object.create(null)) {\n    let enabled = options.__onlyIfSchemaIsSubgraph ? null : true;\n    return internalPlugin({\n        __internal_plugin_id__: 'InlineTrace',\n        __is_disabled_plugin__: false,\n        async serverWillStart({ schema, logger }) {\n            if (enabled === null) {\n                enabled = schemaIsSubgraph(schema);\n                if (enabled) {\n                    logger.info('Enabling inline tracing for this subgraph. To disable, use ' +\n                        'ApolloServerPluginInlineTraceDisabled.');\n                }\n            }\n        },\n        async requestDidStart({ request: { http }, metrics }) {\n            if (!enabled) {\n                return;\n            }\n            const treeBuilder = new TraceTreeBuilder({\n                maskedBy: 'ApolloServerPluginInlineTrace',\n                sendErrors: options.includeErrors,\n            });\n            if (http?.headers.get('apollo-federation-include-trace') !== 'ftv1') {\n                return;\n            }\n            if (metrics.captureTraces === false) {\n                return;\n            }\n            metrics.captureTraces = true;\n            treeBuilder.startTiming();\n            return {\n                async executionDidStart() {\n                    return {\n                        willResolveField({ info }) {\n                            return treeBuilder.willResolveField(info);\n                        },\n                    };\n                },\n                async didEncounterErrors({ errors }) {\n                    treeBuilder.didEncounterErrors(errors);\n                },\n                async willSendResponse({ response }) {\n                    treeBuilder.stopTiming();\n                    if (response.body.kind === 'incremental') {\n                        return;\n                    }\n                    if (metrics.queryPlanTrace) {\n                        treeBuilder.trace.queryPlan = metrics.queryPlanTrace;\n                    }\n                    const encodedUint8Array = Trace.encode(treeBuilder.trace).finish();\n                    const encodedBuffer = Buffer.from(encodedUint8Array, encodedUint8Array.byteOffset, encodedUint8Array.byteLength);\n                    const extensions = response.body.singleResult.extensions ||\n                        (response.body.singleResult.extensions = Object.create(null));\n                    if (typeof extensions.ftv1 !== 'undefined') {\n                        throw new Error('The `ftv1` extension was already present.');\n                    }\n                    extensions.ftv1 = encodedBuffer.toString('base64');\n                },\n            };\n        },\n    });\n}\n//# sourceMappingURL=index.js.map"],"names":["ApolloServerPluginInlineTrace","options","Object","create","enabled","__onlyIfSchemaIsSubgraph","__internal_plugin_id__","__is_disabled_plugin__","serverWillStart","schema","logger","info","requestDidStart","request","http","metrics","treeBuilder","maskedBy","sendErrors","includeErrors","headers","get","captureTraces","startTiming","executionDidStart","willResolveField","didEncounterErrors","errors","willSendResponse","response","stopTiming","body","kind","queryPlanTrace","trace","queryPlan","encodedUint8Array","finish","encodedBuffer","Buffer","from","byteOffset","byteLength","extensions","singleResult","ftv1","Error","toString"],"mappings":"wLAIO,SAASA,EAA8BC,EAAUC,OAAOC,MAAM,CAAC,KAAK,EACvE,IAAIC,EAAUH,CAAAA,EAAQI,wBAAwB,EAAG,KACjD,MAAO,QAAe,CAClBC,uBAAwB,cACxBC,uBAAwB,GACxB,MAAMC,gBAAgB,CAAEC,OAAAA,CAAM,CAAEC,OAAAA,CAAM,CAAE,EACpB,OAAZN,GACAA,CAAAA,EAAU,QAAiBK,EAAM,GAE7BC,EAAOC,IAAI,CAAC,oGAIxB,EACA,MAAMC,gBAAgB,CAAEC,QAAS,CAAEC,KAAAA,CAAI,CAAE,CAAEC,QAAAA,CAAO,CAAE,EAChD,GAAI,CAACX,EACD,OAEJ,IAAMY,EAAc,IAAI,GAAgB,CAAC,CACrCC,SAAU,gCACVC,WAAYjB,EAAQkB,aAAa,AACrC,GACA,GAAIL,GAAMM,QAAQC,IAAI,qCAAuC,QAGzDN,AAA0B,KAA1BA,EAAQO,aAAa,CAKzB,OAFAP,EAAQO,aAAa,CAAG,GACxBN,EAAYO,WAAW,GAChB,CACGC,kBAAN,SACW,EACHC,iBAAAA,CAAiB,CAAEd,KAAAA,CAAI,CAAE,GACdK,EAAYS,gBAAgB,CAACd,EAE5C,GAEJ,MAAMe,mBAAmB,CAAEC,OAAAA,CAAM,CAAE,EAC/BX,EAAYU,kBAAkB,CAACC,EACnC,EACA,MAAMC,iBAAiB,CAAEC,SAAAA,CAAQ,CAAE,EAE/B,GADAb,EAAYc,UAAU,GAClBD,AAAuB,gBAAvBA,EAASE,IAAI,CAACC,IAAI,CAClB,MAEAjB,CAAAA,EAAQkB,cAAc,EACtBjB,CAAAA,EAAYkB,KAAK,CAACC,SAAS,CAAGpB,EAAQkB,cAAc,AAAD,EAEvD,IAAMG,EAAoB,WAAY,CAACpB,EAAYkB,KAAK,EAAEG,MAAM,GAC1DC,EAAgBC,OAAOC,IAAI,CAACJ,EAAmBA,EAAkBK,UAAU,CAAEL,EAAkBM,UAAU,EACzGC,EAAad,EAASE,IAAI,CAACa,YAAY,CAACD,UAAU,EACnDd,CAAAA,EAASE,IAAI,CAACa,YAAY,CAACD,UAAU,CAAGzC,OAAOC,MAAM,CAAC,KAAI,EAC/D,GAAI,AAA2B,SAApBwC,EAAWE,IAAI,CACtB,MAAM,AAAIC,MAAM,4CAEpBH,CAAAA,EAAWE,IAAI,CAAGP,EAAcS,QAAQ,CAAC,SAC7C,CACJ,CACJ,CACJ,EACJ,C"}